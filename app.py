import streamlit as st
import base64
import os
import time

# === ƒê·ªäNH NGHƒ®A H·∫∞NG S·ªê V√Ä FILE ===
# T√™n c√°c file c·∫ßn thi·∫øt
video_file = "airplane.mp4"
bg_file = "cabbase.jpg"
bg_mobile_file = "mobile.jpg" 

# Danh s√°ch b√†i h√°t (D√πng cho th·∫ª <audio> ƒë∆°n gi·∫£n)
AUDIO_FILES = ["background.mp3", "background2.mp3", "background3.mp3", "background4.mp3", "background5.mp3"]
# B√†i h√°t m·∫∑c ƒë·ªãnh s·∫Ω play
DEFAULT_AUDIO_FILE = AUDIO_FILES[0]

# ∆Ø·ªõc t√≠nh th·ªùi gian chuy·ªÉn c·∫£nh (C·∫ßn ƒëi·ªÅu ch·ªânh)
VIDEO_DURATION_SECONDS = 5  
FADE_DURATION_SECONDS = 4   
TOTAL_DELAY_SECONDS = VIDEO_DURATION_SECONDS + FADE_DURATION_SECONDS
# =========================================================================

# --- C·∫§U H√åNH BAN ƒê·∫¶U ---
st.set_page_config(page_title="T·ªï B·∫£o D∆∞·ª°ng S·ªë 1", layout="wide")

# H√†m ƒë·ªçc file v√† chuy·ªÉn th√†nh Base64
def get_base64(file_path):
    try:
        with open(file_path, "rb") as f:
            return base64.b64encode(f.read()).decode("utf-8")
    except FileNotFoundError:
        return None

# --- Kh·ªüi t·∫°o Session State ---
if "show_main" not in st.session_state:
    st.session_state.show_main = False
if "intro_ran" not in st.session_state:
    st.session_state.intro_ran = False

# === T·∫¢I T·∫§T C·∫¢ FILE C·∫¶N THI·∫æT ===
img_base64 = get_base64(bg_file)
if img_base64 is None:
    st.error(f"‚ùå Kh√¥ng t√¨m th·∫•y file {bg_file}. Vui l√≤ng ki·ªÉm tra l·∫°i t√™n v√† ƒë∆∞·ªùng d·∫´n file.")
    st.stop()
    
img_mobile_base64 = get_base64(bg_mobile_file)
if img_mobile_base64 is None:
    img_mobile_base64 = img_base64 

# T·∫£i file √¢m thanh m·∫∑c ƒë·ªãnh
audio_base64 = get_base64(DEFAULT_AUDIO_FILE)
if audio_base64 is None:
    st.warning(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file √¢m thanh: {DEFAULT_AUDIO_FILE}. S·∫Ω kh√¥ng ph√°t nh·∫°c n·ªÅn.")
# ===================================================

# CSS ƒë·ªông ƒë·ªÉ ki·ªÉm so√°t hi·ªÉn th·ªã video
is_main_page = st.session_state.show_main
video_display_style = "display: none;" if is_main_page else "display: flex;" 

# === CSS CHUNG V√Ä VIDEO (FIX FLICKER D·ª®T ƒêI·ªÇM & MOBILE FIT) ===
st.markdown(f"""
<style>
/* 1. KH·∫ÆC PH·ª§C VIEWPORT TR√äN MOBILE v√† FULL HEIGHT cho PC */
html, body {{ 
    margin:0; 
    padding:0; 
    height:100%; 
    overflow:hidden; 
    background:black; 
    height: 100%; 
}}

/* 2. FULLSCREEN TRI·ªÜT ƒê·ªÇ */
header[data-testid="stHeader"], footer {{ display: none !important; }}
.block-container, section.main > div {{
    margin: 0 !important;
    padding: 0 !important;
    max-width: 100% !important;
    width: 100vw !important;
    height: 100vh !important;
}}

/* 3. CSS CHO VIDEO CONTAINER (FIX FLICKER B·∫∞NG BLACK SCREEN T·ªêI TH∆Ø·ª¢NG) */
.video-container {{
    position: fixed; inset:0; 
    width:100vw; height:100vh;
    justify-content:center; 
    align-items:center;
    background:black; /* B·∫ÆT BU·ªòC ƒêEN */
    z-index:99999; /* Z-INDEX C·ª∞C CAO ƒê·ªÇ CH·ªêNG FLICKER */
    {video_display_style} 
    flex-direction: column; 
}}

/* FIX VIDEO MOBILE FIT: B·∫Øt video chi·∫øm to√†n b·ªô viewport */
.video-bg {{ 
    /* D√πng width/height 100% c·ªßa viewport */
    width: 100vw; 
    height: 100vh;
    object-fit:cover; /* Ch·∫ø ƒë·ªô quan tr·ªçng nh·∫•t ƒë·ªÉ FIX FIT, kh√¥ng c√≤n d·∫£i ƒëen */
}}

/* Keyframes v√† animations gi·ªØ nguy√™n */
@keyframes fadeOut {{ 
    0% {{opacity:1;}}
    99% {{opacity:0.01;}}
    100%{{opacity:0; visibility:hidden; z-index:-1;}} 
}}
.intro-animation {{
    animation: fadeOut {FADE_DURATION_SECONDS}s ease-out {VIDEO_DURATION_SECONDS}s forwards; 
}}

/* 4. CSS CHO TRANG CH√çNH: BACKGROUND FIX */
.stApp {{
    /* ƒê·∫£m b·∫£o z-index th·∫•p h∆°n video container */
    z-index:1; 
    background-color: #333; 
    background-image: linear-gradient(rgba(245,242,200,0.4), rgba(245,242,200,0.4)),
                      url("data:image/jpeg;base64,{img_base64}");
    
    background-attachment: fixed; 
    background-size: cover; 
    background-repeat: no-repeat;
    background-position: center center; 
    
    width: 100vw !important;
    height: 100vh !important;
}}

/* 5. MEDIA QUERY (BACKGROUND MOBILE) */
@media screen and (max-width: 768px) {{
    .stApp {{
        background-image: linear-gradient(rgba(245,242,200,0.4), rgba(245,242,200,0.4)),
                          url("data:image/jpeg;base64,{img_mobile_base64}");
        background-size: cover; 
        background-color: #333; 
    }}
}}

/* Kh√¥i ph·ª•c padding nh·∫π cho n·ªôi dung trang ch√≠nh */
.block-container {{ padding-top:2rem !important; padding-left:1rem !important; padding-right:1rem !important;}}
.main-title {{
    font-family:'Special Elite', cursive;
    font-size: clamp(36px,5vw,48px);
    font-weight:bold; text-align:center;
    color:#3e2723; margin-top:50px;
    text-shadow:2px 2px 0 #fff,0 0 25px #f0d49b,0 0 50px #bca27a;
}}

/* ·∫®N N√öT DOWNLOAD C·ª¶A VIDEO V√Ä AUDIO */
video::-webkit-media-controls-enclosure,
audio::-webkit-media-controls-enclosure {{
    border-radius: 8px; /* Gi·ªØ l·∫°i border radius cho ƒë·∫πp */
}}

video::-webkit-media-controls-panel,
audio::-webkit-media-controls-panel {{
    border-radius: 8px; 
    padding: 0 5px;
}}
</style>

<script>
    // CODE JAVASCRIPT ƒê·ªÇ FIX L·ªñI 100vh TR√äN MOBILE (Gi·ªØ nguy√™n)
    function setVhProperty() {{
        let vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${{vh}}px`);
    }}

    setVhProperty();
    window.addEventListener('resize', setVhProperty);
</script>
""", unsafe_allow_html=True)


# --- GIAO DI·ªÜN CHUY·ªÇN C·∫¢NH (VIDEO INTRO) ---
if not st.session_state.show_main and not st.session_state.intro_ran:
    
    video_data = get_base64(video_file)
    if video_data is None:
        st.error(f"‚ùå Kh√¥ng t√¨m th·∫•y file {video_file}.")
        st.stop()
    
    st.markdown(f"""
    <div class="video-container intro-animation" id="videoContainer">
        <video id="introVideo" class="video-bg" autoplay muted playsinline>
            <source src="data:video/mp4;base64,{video_data}" type="video/mp4">
        </video>
        <div class="video-text">KH√ÅM PH√Å TH·∫æ GI·ªöI C√ôNG CH√öNG T√îI</div>
    </div>
    """, unsafe_allow_html=True)
    
    time.sleep(TOTAL_DELAY_SECONDS) 
    
    st.session_state.show_main = True
    st.session_state.intro_ran = True 
    st.rerun() 
    
    st.stop() 

# --- TRANG CH√çNH ---

st.markdown('<div class="main-title">üìú T·ªî B·∫¢O D∆Ø·ª†NG S·ªê 1</div>', unsafe_allow_html=True)
st.write("Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi website ‚úàÔ∏è")

# === KH√îI PH·ª§C TH·∫∫ AUDIO ƒê∆†N GI·∫¢N (T·∫°m th·ªùi) ===
if audio_base64:
    # Th·∫ª audio ti√™u chu·∫©n kh√¥ng c√≥ n√∫t next/previous, nh∆∞ng s·∫Ω ƒë·∫£m b·∫£o ph√°t nh·∫°c ·ªïn ƒë·ªãnh
    st.markdown(f"""
    <audio autoplay loop controls style="position:fixed; top:10px; left:10px; width:200px; z-index:9999;">
        <source src="data:audio/mp3;base64,{audio_base64}" type="audio/mp3">
    </audio>
    """, unsafe_allow_html=True)
# =================================================================================
