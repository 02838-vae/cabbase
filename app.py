import streamlit as st
import os
import random
import time
import base64 
from streamlit_javascript import st_javascript
from user_agents import parse
import streamlit.components.v1 as components

# ================== C·∫§U H√åNH & TR·∫†NG TH√ÅI (Gi·ªØ Nguy√™n) ==================
st.set_page_config(page_title="T·ªï B·∫£o D∆∞·ª°ng S·ªë 1", layout="wide")

# GI·∫¢ ƒê·ªäNH: VIDEO ƒê∆Ø·ª¢C ƒê·∫∂T TRONG TH∆Ø M·ª§C media/
VIDEO_PC = "media/airplane.mp4"
VIDEO_MOBILE = "media/mobile.mp4"
BG_PC = "cabbase.jpg"
BG_MOBILE = "mobile.jpg"
MUSIC_FILES = ["background.mp3", "background2.mp3", "background3.mp3", "background4.mp3", "background5.mp3"]

if "intro_done" not in st.session_state:
    st.session_state.intro_done = False
if "is_mobile" not in st.session_state:
    st.session_state.is_mobile = None 

# --- X√ÅC ƒê·ªäNH THI·∫æT B·ªä D√ôNG USER AGENT (Gi·ªØ Nguy√™n) ---
if st.session_state.is_mobile is None:
    ua_string = st_javascript("""window.navigator.userAgent;""")
    
    if ua_string:
        user_agent = parse(ua_string)
        st.session_state.is_mobile = not user_agent.is_pc
        st.rerun()
    else:
        st.info("ƒêang x√°c ƒë·ªãnh thi·∫øt b·ªã v√† t·∫£i...")
        st.stop()

# ================== ·∫®N HEADER STREAMLIT & B·∫¨T FULL SCREEN CSS T·ªêI ∆ØU ==================
def hide_streamlit_ui():
    st.markdown("""
    <style>
    /* 1. ·∫®n c√°c th√†nh ph·∫ßn Streamlit m·∫∑c ƒë·ªãnh */
    [data-testid="stToolbar"], header, footer, iframe[title*="keyboard"], [tabindex="0"][aria-live] {
        display: none !important;
        visibility: hidden !important;
    }
    
    /* 2. GHI ƒê√à CSS C·ª¶A STREAMLIT T·ªêI ∆ØU (Bao g·ªìm c·∫£ container ch√≠nh v√† block-container) */
    .stApp, .stApp > header, .main, .block-container, 
    [data-testid="stVerticalBlock"] {
        padding: 0 !important;
        margin: 0 !important;
        /* QUAN TR·ªåNG: ƒê·∫£m b·∫£o chi·ªÅu r·ªông l√† 100vw tr√™n m·ªçi container cha */
        max-width: 100vw !important; 
        width: 100vw !important;
        min-height: 100vh !important;
    }
    
    .stApp > div {
        padding: 0 !important;
        margin: 0 !important;
    }
    
    /* 3. TƒÇNG ƒê·ªò ∆ØU TI√äN CHO TH·∫∫ VIDEO WRAPPER */
    .stVideo {
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        width: 100vw !important;
        height: 100vh !important;
        z-index: 9999;
    }
    
    /* 4. ƒê·∫£m b·∫£o th·∫ª <video> b√™n trong full-screen */
    .stVideo > video {
        width: 100% !important;
        height: 100% !important;
        object-fit: cover !important;
    }

    /* 5. Quy t·∫Øc b·ªï sung ƒë·ªÉ kh·∫Øc ph·ª•c l·ªói padding/margin tr√™n mobile */
    .st-emotion-cache-1jicfl2, .st-emotion-cache-z5in9b, .st-emotion-cache-1cypn32 { 
        padding: 0 !important;
        margin: 0 !important;
    }
    </style>
    """, unsafe_allow_html=True)


# ================== M√ÄN H√åNH INTRO T·ªêI GI·∫¢N (D√πng st.video) ==================
def intro_screen(is_mobile=False):
    hide_streamlit_ui()
    
    video_path = VIDEO_MOBILE if is_mobile else VIDEO_PC
    
    if not os.path.exists(video_path):
        st.error(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y video: {video_path}")
        st.session_state.intro_done = True
        st.rerun()
        return

    # S·ª¨ D·ª§NG st.video THAY V√å components.html/Base64
    # Kh√¥ng c·∫ßn d√πng columns [0.01, 0.98, 0.01] n·ªØa v√¨ CSS ƒë√£ l√†m vi·ªác ƒë√≥
    st.video(video_path, format="video/mp4", start_time=0) 

    # --- D√≤ng ch·ªØ tr√™n video ---
    st.markdown(f"""
    <style>
    #intro-text-final {{
        position: fixed; 
        bottom: 20vh; 
        left: 50%; 
        transform: translateX(-50%);
        font-size: clamp(18px, 3vw, 40px); 
        color: white; 
        z-index: 10000;
        text-shadow: 2px 2px 6px rgba(0,0,0,0.8);
        font-family: 'Arial', sans-serif;
    }}
    </style>
    <div id="intro-text-final">KH√ÅM PH√Å TH·∫æ GI·ªöI C√ôNG CH√öNG T√îI</div>
    """, unsafe_allow_html=True)

    # --- C∆° ch·∫ø Chuy·ªÉn Trang d·ª±a tr√™n th·ªùi gian ---
    if "start_time" not in st.session_state:
        st.session_state.start_time = time.time()
    
    if time.time() - st.session_state.start_time < 9.5: 
        time.sleep(1) 
        st.rerun()
    else:
        st.session_state.intro_done = True
        del st.session_state.start_time
        st.rerun()


# ================== TRANG CH√çNH (Gi·ªØ Nguy√™n) ==================
def main_page(is_mobile=False):
    hide_streamlit_ui() 
    bg = BG_MOBILE if is_mobile else BG_PC
    
    try:
        with open(bg, "rb") as f:
            bg_b64 = base64.b64encode(f.read()).decode()
    except FileNotFoundError:
        st.error(f"‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y ·∫£nh n·ªÅn: {bg}")
        bg_b64 = ""

    st.markdown(f"""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Playfair+Display:wght@600&display=swap');
    .stApp {{
        background-image: url("data:image/jpeg;base64,{bg_b64}");
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        animation: fadeInBg 1s ease-in-out forwards;
    }}
    @keyframes fadeInBg {{ from {{ opacity: 0; }} to {{ opacity: 1; }} }}
    h1 {{
        text-align: center; margin-top: 60px; color: #2E1C14;
        text-shadow: 2px 2px 6px #FFF8DC; font-family: 'Playfair Display', serif;
    }}
    </style>
    """, unsafe_allow_html=True)

    available_music = [m for m in MUSIC_FILES if os.path.exists(m)]
    if available_music:
        chosen = random.choice(available_music)
        with st.sidebar:
            st.subheader("üéµ Nh·∫°c n·ªÅn")
            st.audio(chosen, start_time=0) 
            st.caption(f"ƒêang ph√°t: **{os.path.basename(chosen)}**")

    st.markdown("<h1>T·ªî B·∫¢O D∆Ø·ª†NG S·ªê 1</h1>", unsafe_allow_html=True)


# ================== LU·ªíNG CH√çNH (Gi·ªØ Nguy√™n) ==================
hide_streamlit_ui()

if st.session_state.is_mobile is None:
    pass 
elif not st.session_state.intro_done:
    intro_screen(st.session_state.is_mobile)
else:
    main_page(st.session_state.is_mobile)
