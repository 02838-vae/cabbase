import streamlit as st
import base64
import os
import random
# Import Streamlit Component API
from streamlit.components.v1 import html

# ---------------- C·∫•u h√¨nh ----------------
st.set_page_config(page_title="T·ªï B·∫£o D∆∞·ª°ng S·ªë 1", layout="wide")

VIDEO_INTRO = "airplane.mp4"
PC_BACKGROUND = "cabbase.jpg"
MOBILE_BACKGROUND = "mobile.jpg"
MUSIC_FILES = [
    "background.mp3",
    "background2.mp3",
    "background3.mp3",
    "background4.mp3",
    "background5.mp3"
]

if "intro_complete" not in st.session_state:
    st.session_state["intro_complete"] = False


# ---------------- CSS ·∫©n header Streamlit ----------------
def hide_streamlit_ui():
    """·∫®n c√°c th√†nh ph·∫ßn giao di·ªán m·∫∑c ƒë·ªãnh c·ªßa Streamlit."""
    st.markdown("""
    <style>
    /* ·∫®n UI ch√≠nh c·ªßa Streamlit */
    [data-testid="stDecoration"],
    header, footer, [data-testid="stToolbar"],
    iframe, svg, [title*="keyboard"], [tabindex="0"][aria-live] {
        display: none !important;
        visibility: hidden !important;
    }
    /* ƒê·∫£m b·∫£o n·ªôi dung Streamlit b·ªã ·∫©n ho√†n to√†n khi intro ƒëang ch·∫°y */
    .stApp > div:nth-child(1) > div:nth-child(1) {
        visibility: hidden;
    }
    </style>
    """, unsafe_allow_html=True)


# ---------------- CSS n·ªÅn trang ch√≠nh ----------------
def apply_main_css():
    """√Åp d·ª•ng CSS n·ªÅn trang ch√≠nh."""
    st.markdown(f"""
    <style>
    .stApp {{
        background-image: url("{PC_BACKGROUND}");
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
        transition: background 1s ease-in-out;
    }}
    @media only screen and (max-width: 768px) {{
        .stApp {{
            background-image: url("{MOBILE_BACKGROUND}");
        }}
    }}
    h1 {{
        font-family: 'Times New Roman', serif;
        color: #4E342E;
        text-shadow: 2px 2px 4px #FFF8DC;
    }}
    /* T·∫Øt ·∫©n Streamlit UI khi ·ªü trang ch√≠nh */
    .stApp > div:nth-child(1) > div:nth-child(1) {{
        visibility: visible !important;
    }}
    </style>
    """, unsafe_allow_html=True)


# ---------------- M√†n h√¨nh Intro (FIX CU·ªêI C√ôNG) ----------------
def intro_screen():
    """Hi·ªÉn th·ªã video intro v√† t·ª± ƒë·ªông chuy·ªÉn trang sau khi video k·∫øt th√∫c."""
    
    # ·∫®n UI Streamlit chung
    hide_streamlit_ui() 

    if not os.path.exists(VIDEO_INTRO):
        st.error("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file airplane.mp4")
        st.session_state["intro_complete"] = True
        st.rerun()
        return

    # Encode video base64
    with open(VIDEO_INTRO, "rb") as f:
        video_b64 = base64.b64encode(f.read()).decode()

    # T·∫°o HTML tr·ª±c ti·∫øp. S·∫Ω ƒë∆∞·ª£c nh√∫ng d∆∞·ªõi d·∫°ng component.
    intro_html_content = f"""
    <style>
    html, body {{
        margin: 0; padding: 0;
        width: 100%; height: 100%;
        overflow: hidden;
        background-color: black;
    }}
    video {{
        position: fixed;
        top: 0; left: 0;
        width: 100vw;
        height: 100vh;
        object-fit: cover;
        z-index: -1;
    }}
    #intro-text {{
        position: fixed;
        bottom: 10%;
        left: 50%;
        transform: translateX(-50%);
        font-size: clamp(1em, 5vw, 1.8em);
        color: white;
        font-family: 'Times New Roman', serif;
        text-shadow: 2px 2px 8px black;
        animation: fadeInOut 6s forwards;
        z-index: 10;
    }}
    @keyframes fadeInOut {{
        0% {{ opacity: 0; }}
        15% {{ opacity: 1; }}
        85% {{ opacity: 1; }}
        100% {{ opacity: 0; }}
    }}
    #fadeout {{
        position: fixed;
        top: 0; left: 0;
        width: 100vw; height: 100vh;
        background: black;
        opacity: 0;
        transition: opacity 1s ease-in-out;
        z-index: 20;
    }}
    </style>

    <video id="introVideo" autoplay muted playsinline preload="auto">
        <source src="data:video/mp4;base64,{video_b64}" type="video/mp4">
    </video>

    <div id="intro-text">KH√ÅM PH√Å TH·∫æ GI·ªöI C√ôNG CH√öNG T√îI</div>
    <div id="fadeout"></div>

    <script>
    const v = document.getElementById('introVideo');
    const fadeout = document.getElementById('fadeout');
    
    // N·∫øu autoplay b·ªã ch·∫∑n ‚Üí ph√°t khi user ch·∫°m
    v.play().catch(() => {{
        document.body.addEventListener('click', () => v.play(), {{once:true}});
    }});

    // **S·ª¨ D·ª§NG window.parent.location.reload()**
    // ƒê√¢y l√† c√°ch √©p bu·ªôc Streamlit reload v√† ch·∫°y l·∫°i logic Python.
    // N·∫øu chuy·ªÉn tr·∫°ng th√°i b·∫±ng session state kh√¥ng ƒë∆∞·ª£c, √©p reload l√† c√°ch cu·ªëi c√πng.
    const totalDuration = 7500; // 7.5 gi√¢y ƒë·ªÉ ƒë·∫£m b·∫£o video ch·∫°y h·∫øt

    setTimeout(() => {{
        fadeout.style.opacity = 1;
        setTimeout(() => {{
            // **Quan tr·ªçng:** √âp Streamlit reload ƒë·ªÉ chuy·ªÉn sang tr·∫°ng th√°i m·ªõi.
            window.parent.location.reload(); 
        }}, 1000); // 1s cho hi·ªáu ·ª©ng fade
    }}, totalDuration - 1000); 
    </script>
    """
    # Hi·ªÉn th·ªã component HTML t√πy ch·ªânh
    html(intro_html_content, height=1, width=1)
    
    # **Logic chuy·ªÉn tr·∫°ng th√°i (Python)**
    # V√¨ ta d√πng window.parent.location.reload() b√™n JavaScript,
    # ta c·∫ßn m·ªôt c∆° ch·∫ø ƒë·ªÉ Python bi·∫øt tr·∫°ng th√°i ƒë√£ ho√†n th√†nh SAU KHI reload.
    # C∆° ch·∫ø ·ªïn ƒë·ªãnh nh·∫•t l√† s·ª≠ d·ª•ng m·ªôt n√∫t ·∫©n b·ªã ·∫©n kh·ªèi t·∫ßm nh√¨n.
    
    # T·∫°o m·ªôt n√∫t ·∫©n ho√†n to√†n b·∫±ng CSS
    st.markdown("""
    <style>
    #hidden_button_container {
        position: fixed;
        top: -100px;
        left: -100px;
        width: 1px;
        height: 1px;
        overflow: hidden;
    }
    </style>
    <div id="hidden_button_container">
    """, unsafe_allow_html=True)
    
    # N√∫t n√†y ch·ªâ d√πng ƒë·ªÉ k√≠ch ho·∫°t st.rerun() sau khi ng∆∞·ªùi d√πng t∆∞∆°ng t√°c
    # Tuy nhi√™n, v√¨ ta d√πng reload() trong JS, ta ch·ªâ c·∫ßn set session state ·ªü ƒë√¢y
    
    # **Gi·∫£i ph√°p ·ªîn ƒë·ªãnh:** Sau khi JS reload trang, Streamlit s·∫Ω ch·∫°y l·∫°i
    # v√† *l·∫ßn ch·∫°y ti·∫øp theo* ng∆∞·ªùi d√πng s·∫Ω th·∫•y trang ch√≠nh.
    # V√¨ logic reload trong JS ƒë√£ ƒë·∫£m b·∫£o trang Python ch·∫°y l·∫°i.
    # Ta ph·∫£i s·ª≠ d·ª•ng m·ªôt c∆° ch·∫ø ch·ªù ƒë·ªÉ Streamlit kh√¥ng k·∫øt th√∫c qu√° s·ªõm.
    
    # **D√πng m·ªôt bi·∫øn gi·∫£ ƒë·ªÉ ƒë·∫£m b·∫£o Streamlit kh√¥ng render l·∫°i ph·∫ßn n√†y**
    if "reloaded_intro" not in st.session_state:
        st.session_state["reloaded_intro"] = True
    else:
        # Gi·∫£ s·ª≠ trang ƒë√£ reload v√† video ƒë√£ ch·∫°y.
        # **C∆† CH·∫æ B·∫ÆT L·ªñI T·ªêI ∆ØU:**
        # N·∫øu ƒë√£ ·ªü intro qu√° 8 gi√¢y (sau khi reload), chuy·ªÉn qua trang ch√≠nh ƒë·ªÉ tho√°t k·∫πt
        if "start_time" not in st.session_state:
             st.session_state["start_time"] = time.time()
        
        if time.time() - st.session_state["start_time"] > 8:
            st.session_state["intro_complete"] = True
            del st.session_state["start_time"]
            st.rerun()


# ---------------- Trang ch√≠nh ----------------
def main_page():
    """Hi·ªÉn th·ªã trang ch√≠nh."""
    
    apply_main_css()

    # Nh·∫°c n·ªÅn
    available = [m for m in MUSIC_FILES if os.path.exists(m)]
    if available:
        track = random.choice(available)
        with st.sidebar:
            st.subheader("üé∂ Nh·∫°c n·ªÅn")
            st.audio(track, format="audio/mp3", loop=True)
            st.caption(f"ƒêang ph√°t: **{os.path.basename(track)}**")

    # Ti√™u ƒë·ªÅ
    st.markdown("""
    <h1 style='text-align:center; font-size:3.2em; margin-top:50px;'>
        T·ªî B·∫¢O D∆Ø·ª†NG S·ªê 1
    </h1>
    """, unsafe_allow_html=True)
    st.markdown("<div style='height:70vh'></div>", unsafe_allow_html=True)


# ---------------- Logic ch√≠nh ----------------
import time # C·∫ßn import time n·∫øu ch∆∞a c√≥

if st.session_state["intro_complete"]:
    main_page()
else:
    intro_screen()
