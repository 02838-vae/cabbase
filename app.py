import streamlit as st
import random
import time
import base64 # C·∫ßn thi·∫øt ƒë·ªÉ nh√∫ng HTML local

# --- C·∫•u h√¨nh Trang (Lu√¥n ƒë·∫∑t ·ªü ƒë·∫ßu) ---
st.set_page_config(layout="wide", page_title="T·ªï B·∫£o D∆∞·ª°ng S·ªë 1")

# --- Kh·ªüi t·∫°o Session State ---
if 'intro_complete' not in st.session_state:
    st.session_state['intro_complete'] = False

# --- CSS T√πy ch·ªânh (ƒê·ªãnh nghƒ©a Phong c√°ch Vintage v√† Hi·ªáu ·ª©ng) ---
def custom_css():
    """CSS cho Trang Ch√≠nh (k√®m Media Query cho n·ªÅn)"""
    
    vintage_css = f"""
    <style>
    /* CSS Chung cho n·ªÅn Trang Ch√≠nh */
    .stApp {{
        background-size: cover;
        background-attachment: fixed;
        background-position: center;
        transition: background-image 1s ease-in-out;
        min-height: 100vh;
    }}
    
    /* Thi·∫øt l·∫≠p ·∫£nh n·ªÅn m·∫∑c ƒë·ªãnh (PC) */
    .stApp.main-page-bg {{
        background-image: url("cabbage.jpg");
    }}
    
    /* Media Query cho Mobile */
    @media only screen and (max-width: 768px) {{
        .stApp.main-page-bg {{
            background-image: url("mobile.jpg"); /* ·∫¢nh n·ªÅn Mobile */
        }}
    }}

    /* Thi·∫øt l·∫≠p font ch·ªØ ki·ªÉu c·ªï ƒëi·ªÉn */
    h1, .stText, p, .stMarkdown, label {{
        font-family: 'Times New Roman', serif; 
        color: #4E342E; /* M√†u n√¢u ƒë·∫≠m */
    }}

    /* ƒê·ªãnh d·∫°ng l·∫°i st.audio trong sidebar cho phong c√°ch Vintage */
    [data-testid="stSidebarContent"] {{
        background-color: rgba(255, 255, 240, 0.9); /* N·ªÅn sidebar m√†u ng√† */
        padding: 15px;
        border-right: 2px solid #A1887F; /* Th√™m vi·ªÅn c·ªï */
    }}
    .stAudio {{
        background-color: rgba(245, 245, 220, 0.8);
        border: 1px solid #A1887F;
        border-radius: 10px;
        padding: 5px;
    }}
    </style>
    """
    st.markdown(vintage_css, unsafe_allow_html=True)

def embed_intro_video():
    """Nh√∫ng file HTML video intro s·ª≠ d·ª•ng base64"""
    try:
        with open("intro_video.html", "r") as f:
            html_code = f.read()
        
        # M√£ h√≥a HTML sang base64 ƒë·ªÉ nh√∫ng v√†o iframe (gi·∫£i ph√°p t·ªët nh·∫•t cho Streamlit)
        b64_html = base64.b64encode(html_code.encode()).decode()
        
        # Nh√∫ng iframe
        st.components.v1.html(
            f'<iframe src="data:text/html;base64,{b64_html}" width="100%" height="100%" frameborder="0" style="position:fixed; top:0; left:0; z-index:9999;"></iframe>',
            height=700, # Chi·ªÅu cao t·∫°m th·ªùi, iframe s·∫Ω chi·∫øm to√†n m√†n h√¨nh
            scrolling=False
        )

    except FileNotFoundError:
        st.error("L·ªói: Kh√¥ng t√¨m th·∫•y file 'intro_video.html' ho·∫∑c 'airplane.mp4'. Vui l√≤ng ki·ªÉm tra l·∫°i ƒë∆∞·ªùng d·∫´n.")
        # T·ª± ƒë·ªông chuy·ªÉn trang n·∫øu video l·ªói
        time.sleep(1)
        st.session_state['intro_complete'] = True
        st.rerun()

def main_page():
    """Trang Ch√≠nh T·ªëi Gi·∫£n theo phong c√°ch Vintage"""
    custom_css() # √Åp d·ª•ng CSS
    
    # G·∫Øn class n·ªÅn cho Trang Ch√≠nh
    st.markdown('<div class="stApp main-page-bg">', unsafe_allow_html=True)

    # 1. Thanh ph√°t nh·∫°c ng·∫´u nhi√™n (G√≥c tr√™n b√™n tr√°i)
    music_files = ["background.mp3", "background1.mp3", "background2.mp3", "background3.mp3", "background4.mp3", "background5.mp3"]
    random_track = random.choice(music_files)
    
    # S·ª≠ d·ª•ng st.sidebar ƒë·ªÉ ƒë·∫∑t thanh nh·∫°c g√≥c tr√™n b√™n tr√°i
    with st.sidebar:
        st.subheader("üé∂ Nh·∫°c N·ªÅn C·ªï ƒêi·ªÉn")
        st.audio(random_track, format="audio/mp3", start_time=0, loop=True) 
        st.caption(f"ƒêang ph√°t ng·∫´u nhi√™n: **{random_track}**")

    # 2. Ti√™u ƒë·ªÅ canh gi·ªØa
    st.markdown("<h1 style='text-align: center; font-size: 3.5em; text-shadow: 1px 1px 2px #FFF8DC;'>T·ªî B·∫¢O D∆Ø·ª†NG S·ªê 1</h1>", unsafe_allow_html=True)
    
    # 3. N·ªôi dung r·ªóng
    st.empty()
    st.markdown('<div style="height: 50vh;"></div>', unsafe_allow_html=True) # Gi·ªØ cho trang kh√¥ng b·ªã tr·ªëng r·ªóng

    st.markdown('</div>', unsafe_allow_html=True)

# --- Lu·ªìng ·ª®ng D·ª•ng Ch√≠nh ---

if not st.session_state['intro_complete']:
    embed_intro_video()
    
    # --- X·ª¨ L√ù S·ª∞ KI·ªÜN CHUY·ªÇN TRANG T·ª™ IFRAME ---
    # Nghe th√¥ng ƒëi·ªáp t·ª´ JavaScript trong iframe
    st.components.v1.html("""
        <script>
            window.addEventListener('message', event => {
                if (event.data && event.data.type === 'intro_done') {
                    // C·∫≠p nh·∫≠t session state c·ªßa Streamlit ƒë·ªÉ k√≠ch ho·∫°t chuy·ªÉn trang
                    // T·ª± ƒë·ªông reload trang sau khi nh·∫≠n th√¥ng ƒëi·ªáp
                    window.parent.location.reload(); 
                }
            });
        </script>
    """, height=0, width=0)

else:
    main_page()
